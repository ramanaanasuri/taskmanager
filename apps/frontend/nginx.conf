server {
    listen 80;
    server_name _;

    root /usr/share/nginx/html;
    index index.html;

    include /etc/nginx/mime.types;                     # ADDED

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Serve static files
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Versioned assets must exist; prevents HTML for .js (fixes MIME error)
    location ^~ /static/ {                              # ADDED
        try_files $uri =404;                            # ADDED
    }                                                   # ADDED

    # OAuth callback route
    location /login/oauth2/ {
        proxy_pass http://taskmanager-backend:8080/login/oauth2/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;     # ADDED (keeps HTTPS in redirects)
        proxy_set_header X-Forwarded-Host $host;
	proxy_set_header X-Forwarded-Port  443;
	proxy_set_header X-Forwarded-Ssl   on;
    }
	# FRONTEND-ONLY route where React reads the JWT from the URL:
	location = /oauth2/redirect {                     # ADDED
		try_files /index.html =404;                   # ADDED
	}	

    # OAuth authorization route
    location /oauth2/ {
        proxy_pass http://taskmanager-backend:8080/oauth2/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;     # ADDED
        proxy_set_header X-Forwarded-Host $host;
	proxy_set_header X-Forwarded-Port  443;
	proxy_set_header X-Forwarded-Ssl   on;
    }

    # API proxy to backend
    location /api/ {
        proxy_pass http://taskmanager-backend:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;     # ADDED
        proxy_set_header X-Forwarded-Host $host;
	proxy_set_header X-Forwarded-Port  443;
	proxy_set_header X-Forwarded-Ssl   on;
    }
    location ^~ /auth/ {
    proxy_pass http://taskmanager-backend:8080/api/auth/;

    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-Port  443;
    proxy_set_header X-Forwarded-Ssl   on;
    proxy_set_header X-Forwarded-Host  $host;
    }

    location ^~ /api/auth/ {
    proxy_pass http://taskmanager-backend:8080;

    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-Port  443;
    proxy_set_header X-Forwarded-Ssl   on;
    proxy_set_header X-Forwarded-Host  $host;
    }


    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        try_files $uri =404;                            # ADDED (avoid HTML on missing files)
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}
